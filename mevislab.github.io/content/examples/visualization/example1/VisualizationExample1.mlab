// MDL v1 utf8
mevislabVersion = 3.5.0.612
network  {
  watchlist = ""
}
module LocalImage {
  internal  {
    frame = "857 525 96 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "720 558 480 144"
        sizeHint = "480 144"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = LocalImage
    name = $(DemoDataPath)/Tumor1_Head_t1.small.tif
    autoLoad = TRUE
  }
}
module Convolution {
  internal  {
    frame = "713 381 96 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "814 541 293 179"
        sizeHint = "293 179"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = Convolution
    borderHandling = PadSrcClamp
    fillValue = 0
    referenceExtentMode = Overlap
    intervalMinOfFilteredVoxels = 0
    intervalMaxOfFilteredVoxels = 1024
    useIntervalOfFilteredVoxels = FALSE
    externalKernel = ""
    predefKernel = "5x5 Average Kernel"
  }
}
module SynchroView2D {
  internal  {
    frame = "829 213 120 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "92 303 804 400"
        sizeHint = "804 400"
        wasOpen = yes
      }
    }
  }
  fields  {
    instanceName = SynchroView2D
    leftInventorInputOn = FALSE
    rightInventorInputOn = FALSE
    synchSlicing = TRUE
    synchZooming = TRUE
    synchTiming = TRUE
    synchLUTs = FALSE
    disconnectOnHide = TRUE
    snapToCenter1 = FALSE
    snapToCenter2 = FALSE
    slice1 = 8
    timepoint1 = 0
    filterMode = FILTER_LINEAR
    slice2 = 8
    timepoint2 = 0
    lut1w = 415.606292724609
    lut1c = 215.962493896484
    lut2w = 415.606292724609
    lut2c = 215.962493896484
    annotationColor = "0.899999976158142 0.899999976158142 0.899999976158142"
    borderOn = FALSE
    drawCurrentPos = FALSE
    showCurrentPos = FALSE
    worldPosition = "-8.59580993652344 14.0424690246582 85.9715423583984"
    background = "0 0 0"
  }
}
connections  {
  Convolution.input0 = LocalImage.outImage
  SynchroView2D.inImage1 = Convolution.output0
  SynchroView2D.inImage2 = LocalImage.outImage
}
networkModel = ""
