<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Examples on MeVisLab Examples</title><link>https://mevislab.github.io/examples/examples/</link><description>Recent content in Examples on MeVisLab Examples</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 15 Jun 2022 08:56:33 +0200</lastBuildDate><atom:link href="https://mevislab.github.io/examples/examples/index.xml" rel="self" type="application/rss+xml"/><item><title>Basic Mechanisms</title><link>https://mevislab.github.io/examples/examples/basic_mechanisms/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/examples/basic_mechanisms/</guid><description>Basic Mechanism Examples: Contour Filter
Panel for the contour filter
Python scripting
Adding viewer to your UI and implement a field listener in Python</description></item><item><title>Data Objects</title><link>https://mevislab.github.io/examples/examples/data_objects/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/examples/data_objects/</guid><description>Data Object Examples: Creation of Contours
Contour interpolation
2D and 3D visualization of contours
Annotation of images
Contours and ghosting
Distance between markers
Creation of WEMs
Processing and modification of WEMs
Interactively moving WEM
WEM - Primitive Value Lists
Curves</description></item><item><title>Image Processing</title><link>https://mevislab.github.io/examples/examples/image_processing/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/examples/image_processing/</guid><description>Open Inventor Examples: Arithmetic Operations
Masking Images
Region Growing (Segmentation)</description></item><item><title>Open Inventor</title><link>https://mevislab.github.io/examples/examples/open_inventor/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/examples/open_inventor/</guid><description>Open Inventor Examples: Open Inventor objects
Mouse interactions in an Open Inventor scene</description></item><item><title>Testing Example 1: Writing a simple test case in MeVisLab</title><link>https://mevislab.github.io/examples/examples/testing/example1/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/examples/testing/example1/</guid><description>Testing Example 1: Writing a simple test case in MeVisLab This example shows how to write and execute test cases in MeVisLab. The Python files can be downloaded below.
Download You can download the Python files here</description></item><item><title>Testing Example 2: Profiling in MeVisLab</title><link>https://mevislab.github.io/examples/examples/testing/example2/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/examples/testing/example2/</guid><description>Testing Example 2: Profiling in MeVisLab This example shows how to use the Profiling View in MeVisLab.
Download n.a.</description></item><item><title>Testing Example 3: Iterative tests in MeVisLab with Screenshots</title><link>https://mevislab.github.io/examples/examples/testing/example3/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/examples/testing/example3/</guid><description>Testing Example 3: Iterative tests in MeVisLab with Screenshots In this example you will learn how to write iterative tests in MeVisLab. In addition to that, we create a screenshot of a viewer and add the image to the test report.
Download n.a.</description></item><item><title>Testing Examples</title><link>https://mevislab.github.io/examples/examples/testing/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/examples/testing/</guid><description>Testing Examples: Writing a simple test case in MeVisLab
Profiling in MeVisLab
Iterative tests in MeVisLab with Screenshots</description></item><item><title>Visualization Example 1: Synchronous view of two images</title><link>https://mevislab.github.io/examples/examples/visualization/example1/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/examples/visualization/example1/</guid><description>Visualization Example 1: Synchronous view of two images This very simple example shows how to load an image and apply a basic Convolution filter to the image. The image with and without filter is shown in a Viewer and scrolling is synchronized so that the same slice is shown for both images.
Download You can download the example network here</description></item><item><title>Visualization Examples</title><link>https://mevislab.github.io/examples/examples/visualization/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/examples/visualization/</guid><description>Visualization Examples: Synchronous view of two images
Creating a magnifier
Image overlays
Display images converted to Open Inventor scene objects
Volume rendering and interactions</description></item><item><title>Contour Example 1: Creation of Contours</title><link>https://mevislab.github.io/examples/examples/data_objects/contours/example1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/data_objects/contours/example1/</guid><description>Contour Example 1: Creation of Contours This example shows how to create CSOs using SoCSOEditor modules.
Summary Contours (in MeVisLab CSO&amp;rsquo;s) can be created by many modules, such as:
SoCSOPointEditor SoCSOAngleEditor SoCSOArrowEditor SoCSODistanceLineEditor SoCSODistancePolylineEditor SoCSOEllipseEditor SoCSORectangleEditor SoCSOSplineEditor SoCSOPolygonEditor SoCSOIsoEditor SoCSOLiveWireEditor Whenever creating contours, they are managed and temporarily stored by a CSOManager. In this example, contours are created and colors and styles of these CSOs are customized by using a SoCSOVisualizationSettings module.</description></item><item><title>Contour Example 2: Contour interpolation</title><link>https://mevislab.github.io/examples/examples/data_objects/contours/example2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/data_objects/contours/example2/</guid><description>Contour Example 2: Contour interpolation This example shows how to interpolate CSOs over slices.
Summary In this example, semi-automatic countours are created by using a SoCSOLiveWireEditor. The created contours are managed by a CSOManager. Visualization of the contours is customized by using a SoCSOVisualizationSettings module.
In the end, additional contours between the manual contours are generated by the CSOSliceInterpolator and added to the CSOManager. Different groups of contours are created for left and right lung lobe and colored separately.</description></item><item><title>Contour Example 3: 2D and 3D visualization of contours</title><link>https://mevislab.github.io/examples/examples/data_objects/contours/example3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/data_objects/contours/example3/</guid><description>Contour Example 3: 2D and 3D visualization of contours This example shows how to display CSOs in 2D as an overlay. In addition, the CSOs are displayed in 3D.
Summary Images are loaded by using a LocalImage module and visualized in a 2D viewer. A SoCSOLiveWireEditor is added to draw contours on the images. The CSOSliceInterpolator generates additional contours between the manual CSOs by using a linear interpolation.
The module VoxelizeCSO is used to create a 3-dimensional voxel mask of the contours which can be used as overlay on the images in a View2D.</description></item><item><title>Contour Example 4: Annotation of images</title><link>https://mevislab.github.io/examples/examples/data_objects/contours/example4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/data_objects/contours/example4/</guid><description>Contour Example 4: Annotation of images This example shows how to add annotations to an image.
Summary In this example, the network of Contour Example 3 is extended so that the volume of the 3D mask generated by the VoxelizeCSO module is calculated. The CalculateVolume module counts the number of voxels in the given mask and returns the correct volume in ml. This volume is used for a custom SoView2DAnnotation displayed in the View2D.</description></item><item><title>Contour Example 5: Contours and ghosting</title><link>https://mevislab.github.io/examples/examples/data_objects/contours/example5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/data_objects/contours/example5/</guid><description>Contour Example 5: Contours and ghosting This image shows how to automatically create CSOs based on an iso value. In addition the visualization of CSOs of previous and subsequent slices is shown.
Summary In this example, the CSOIsoGenerator is used to generate contours based on a given iso value of the image. Contours are generated in the image where the given iso value is close to the one configured. These contours are stored in a CSOManager and ghosting is activated in the SoCSOVisualizationSettings.</description></item><item><title>Curves Example 1: Drawing curves</title><link>https://mevislab.github.io/examples/examples/data_objects/curves/example1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/data_objects/curves/example1/</guid><description>Marker Example 1: Distance between markers This examples shows how to create and render curves. Download You can download the example network here</description></item><item><title>Example 1: Contour Filter</title><link>https://mevislab.github.io/examples/examples/basic_mechanisms/contour_filter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/basic_mechanisms/contour_filter/</guid><description>Example 1: Contour Filter This example shows how to create a contour filter.
Summary Images are loaded via ImageLoad module and visualized unchanged in a View2D module View2D1. Additionally the images are modified by a local macro module Filter and shown in another View2D viewer View2D.
In order to display the same slice (unchanged and changed), the module SyncFloat is used to synchronize the field value startSlice in both viewers. The SyncFloat module duplicates the value Float1 to the field Float2.</description></item><item><title>Example 1: Panel for the contour filter</title><link>https://mevislab.github.io/examples/examples/basic_mechanisms/macro_modules_and_module_interaction/example1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/basic_mechanisms/macro_modules_and_module_interaction/example1/</guid><description>Example 1: Panel for the contour filter This example contains a whole package structure. Inside you can find the example contour filter for which a panel was created.
Summary A new Macro Module Filter has been created. Initially Macro Modules do not provide an own Panel containing user interface elements such as Buttons. The Automatic Panel is shown on double-clicking the module providing the name of the module.
In this example we update the .</description></item><item><title>Example 2: Python scripting</title><link>https://mevislab.github.io/examples/examples/basic_mechanisms/macro_modules_and_module_interaction/example2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/basic_mechanisms/macro_modules_and_module_interaction/example2/</guid><description>Example 2: Python scripting This example shows how to create module interactions via Python scripting.
Summary A new Macro Module IsoCSOs is created providing 2 viewers in the internal network. One View2D and one SoExaminerViewer. Both viewers are added to the custom user interface of the module.
Additional Buttons for Browsing directories and creating contours (CSOIsoGenerator) are added calling Python functions to explain how Python can be used in MeVisLab. In the end, a field listener is implemented calling a Python function whenever a field of the internal network changes.</description></item><item><title>Example 3: Creating a simple application</title><link>https://mevislab.github.io/examples/examples/basic_mechanisms/viewer_application/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/basic_mechanisms/viewer_application/</guid><description>Example 3: Creating a simple application In this example, you will learn how to create a simple Prototype application in MeVisLab including a User Interface with 2D and 3D viewer. Download You can download the example network here</description></item><item><title>Image Processing Example 1: Arithmetic operations on two images</title><link>https://mevislab.github.io/examples/examples/image_processing/example1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/image_processing/example1/</guid><description>Image Processing Example 1: Arithmetic operations on two images In this example, we apply scalar functions on two images like Add, Multiply, Subtract, etc.
Summary We are loading two images by using the LocalImage module and show them in a SynchroView2D. In addition to that, both images are used for arithmetic processing in the module Arithmetic2.
Download You can download the example network here</description></item><item><title>Image Processing Example 2: Masking images</title><link>https://mevislab.github.io/examples/examples/image_processing/example2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/image_processing/example2/</guid><description>Image Processing Example 2: Masking images In this example, we create a simple mask on an image, so that background pixels are not affected by changes of the window/level values.
Summary We are loading images by using the LocalImage module and show them in a SynchroView2D. The same image is shown in the right viewer of the SynchroView2D but with a Threshold based Mask.
Download You can download the example network here</description></item><item><title>Image Processing Example 3: Region Growing (Segmentation)</title><link>https://mevislab.github.io/examples/examples/image_processing/example3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/image_processing/example3/</guid><description>Image Processing Example 3: Region Growing (Segmentation) In this example, we create a simple mask on an image by using the RegionGrowing module.
Summary We are loading images by using the LocalImage module and show them in a SynchroView2D. The same image is used as input for the RegionGrowing module. The starting point for the algorithm is a list of markers created by the SoView2DMarkerEditor. As the RegionGrowing may leave gaps, an additional CloseGap module is added.</description></item><item><title>Marker Example 1: Distance between markers</title><link>https://mevislab.github.io/examples/examples/data_objects/markers/example1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/data_objects/markers/example1/</guid><description>Marker Example 1: Distance between markers This examples shows how to create markers in a viewer and measure their distance. Download You can download the example network here</description></item><item><title>Open Inventor Example 1: Open Inventor objects</title><link>https://mevislab.github.io/examples/examples/open_inventor/example1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/open_inventor/example1/</guid><description>Open Inventor Example 1: Open Inventor objects In this example a simple Open Inventor scene is created. The Open Inventor scene shows three objects of different color and shape.
Summary A SoExaminerViewer is used to render open inventor scenes in 3D. The SoBackground module defines the background of the whole scene.
Three 3D objects are created (SoCone, SoSphere and SoCube) having a defined SoMaterial module for setting the DiffuseColor of the object.</description></item><item><title>Open Inventor Example 2: Mouse interactions in an Open Inventor scene</title><link>https://mevislab.github.io/examples/examples/open_inventor/example2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/open_inventor/example2/</guid><description>Open Inventor Example 2: Mouse interactions in an Open Inventor scene This example shows how to implement object interactions.
Summary A SoExaminerViewer is used to render a SoCube object. The SoMouseGrabber is used to identify mouse interactions in the viewer and to resize the cube.
Download You can download the example network here</description></item><item><title>Surface Example 1: Creation of WEMs</title><link>https://mevislab.github.io/examples/examples/data_objects/surface_objects/example1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/data_objects/surface_objects/example1/</guid><description>Surface Example 1: Creation of WEMs This example shows how to create WEMs out of voxel images and CSOs. Download You can download the example network here</description></item><item><title>Surface Example 2: Processing and modification of WEMs</title><link>https://mevislab.github.io/examples/examples/data_objects/surface_objects/example2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/data_objects/surface_objects/example2/</guid><description>Surface Example 2: Processing and modification of WEMs This example shows how to process and modify WEMs using the modules WEMModify, WEMSmooth and WEMSurfaceDistance. Download You can download the example network here</description></item><item><title>Surface Example 4: Interactively moving WEM</title><link>https://mevislab.github.io/examples/examples/data_objects/surface_objects/example4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/data_objects/surface_objects/example4/</guid><description>Surface Example 4: Interactively moving WEM This example shows how to use dragger modules, to modify objects in a 3D viewer. Download You can download the example network here</description></item><item><title>Surface Example 5: WEM - Primitive Value Lists</title><link>https://mevislab.github.io/examples/examples/data_objects/surface_objects/example5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/data_objects/surface_objects/example5/</guid><description>Surface Example 5: WEM - Primitive Value Lists This example shows how to use Primitive Value Lists (PVLs). With the help of PVLs the distance between the surfaces of WEMs is color coded. Download You can download the example network here</description></item><item><title>Visualization Example 2: Creating a magnifier</title><link>https://mevislab.github.io/examples/examples/visualization/example2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/visualization/example2/</guid><description>Visualization Example 2: Creating a magnifier This example shows how to create a magnifier. Using the module SubImage a fraction of the original image can be extracted and enlarged. Download You can download the example network here</description></item><item><title>Visualization Example 3: Image overlays</title><link>https://mevislab.github.io/examples/examples/visualization/example3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/visualization/example3/</guid><description>Visualization Example 3: Image overlays This example shows the creation of an overlay. Using the module SoView2DOverlay, an overlay can be blended over a 2D image. Download You can download the example network here</description></item><item><title>Visualization Example 4: Display images converted to Open Inventor scene objects</title><link>https://mevislab.github.io/examples/examples/visualization/example4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/visualization/example4/</guid><description>Visualization Example 4: Display images converted to Open Inventor scene objects This example shows how to convert images to Open Inventor scene objects using the module SoView2D and modules based on SoView2D. Download You can download the example network here</description></item><item><title>Visualization Example 5: Volume rendering and interactions</title><link>https://mevislab.github.io/examples/examples/visualization/example5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/visualization/example5/</guid><description>Visualization Example 5: Volume rendering and interactions This example shows the volume rendering of a scan. The texture of the volume is edited and animations are implemented. Download You can download the example network here</description></item></channel></rss>