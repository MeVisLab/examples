<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Examples on MeVisLab Examples</title><link>https://mevislab.github.io/examples/pull/94/examples/</link><description>Recent content in Examples on MeVisLab Examples</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 15 Jun 2022 08:56:33 +0200</lastBuildDate><atom:link href="https://mevislab.github.io/examples/pull/94/examples/index.xml" rel="self" type="application/rss+xml"/><item><title>Basic Mechanisms</title><link>https://mevislab.github.io/examples/pull/94/examples/basic_mechanisms/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/basic_mechanisms/</guid><description>Basic Mechanism Examples: The following examples are available:
[1] Contour Filter [2] Creating a simple application [3] Panel for the contour filter [4] Python scripting</description></item><item><title>Data Objects</title><link>https://mevislab.github.io/examples/pull/94/examples/data_objects/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/data_objects/</guid><description>Data Object Examples: The following examples are available:
[1] 2D and 3D visualization of contours [2] Annotation of images [3] Apply transformations on a 3D WEM object via mouse interactions [4] Contour interpolation [5] Contours and ghosting [6] Creation of Contours [7] Creation of WEMs [8] Distance between markers [9] Drawing curves [10] Interactively moving WEM [11] Processing and modification of WEMs [12] WEM - Primitive Value Lists</description></item><item><title>Face detection in OpenCV</title><link>https://mevislab.github.io/examples/pull/94/examples/thirdparty/example2/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/thirdparty/example2/</guid><description>ThirdParty Example 2: Face detection in OpenCV This Python file shows how to access the webcam and detect faces in the video stream via OpenCV.
Download You can download the Python files here</description></item><item><title>Image Processing</title><link>https://mevislab.github.io/examples/pull/94/examples/image_processing/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/image_processing/</guid><description>Image Processing Examples: The following examples are available:
[1] Arithmetic operations on two images [2] Clip Planes [3] Masking images [4] Region Growing (Segmentation) [5] Subtract 3D objects</description></item><item><title>Iterative tests in MeVisLab with Screenshots</title><link>https://mevislab.github.io/examples/pull/94/examples/testing/example3/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/testing/example3/</guid><description>Testing Example 3: Iterative tests in MeVisLab with Screenshots In this example you will learn how to write iterative tests in MeVisLab. In addition to that, we create a screenshot of a viewer and add the image to the test report.
Download n.a.</description></item><item><title>Open Inventor</title><link>https://mevislab.github.io/examples/pull/94/examples/open_inventor/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/open_inventor/</guid><description>Open Inventor Examples: The following examples are available:
[1] Camera interaction with collision detection [2] Camera Interactions in Open Inventor [3] Mouse interactions in an Open Inventor scene [4] Open Inventor objects</description></item><item><title>OpenCV Webcam access</title><link>https://mevislab.github.io/examples/pull/94/examples/thirdparty/example1/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/thirdparty/example1/</guid><description>ThirdParty Example 1: OpenCV Webcam access This Python file shows how to access the webcam via OpenCV and use the video via PythonImage module in MeVisLab.
Download You can download the Python files here</description></item><item><title>Profiling in MeVisLab</title><link>https://mevislab.github.io/examples/pull/94/examples/testing/example2/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/testing/example2/</guid><description>Testing Example 2: Profiling in MeVisLab This example shows how to use the Profiling View in MeVisLab.
Download n.a.</description></item><item><title>PyTorch segmentation</title><link>https://mevislab.github.io/examples/pull/94/examples/thirdparty/pytorch1/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/thirdparty/pytorch1/</guid><description>ThirdParty Example 5: Segmentation in webcam stream by using PyTorch This macro module segments a person shown in a webcam stream by using a pre-trained network from PyTorch (torchvision).
Download You can download the Python files here</description></item><item><title>Testing Examples</title><link>https://mevislab.github.io/examples/pull/94/examples/testing/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/testing/</guid><description>Testing Examples: The following examples are available:
[1] Iterative tests in MeVisLab with Screenshots [2] Profiling in MeVisLab [3] Writing a simple test case in MeVisLab</description></item><item><title>ThirdParty Examples</title><link>https://mevislab.github.io/examples/pull/94/examples/thirdparty/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/thirdparty/</guid><description>ThirdParty Examples: The following examples are available:
[1] Face detection in OpenCV [2] OpenCV Webcam access [3] PyTorch segmentation</description></item><item><title>Using provided examples</title><link>https://mevislab.github.io/examples/pull/94/examples/howto/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/howto/</guid><description>Structure Each tutorial chapter was used as an umbrella theme to structure related examples, that are linked in a list. After clicking any of the linked examples, you will be forwarded to a short description of the feature and have the option to download the resource that produces your desired effect.
The provided files are usually either *.mlab files or *.zip archives. You will find a short tutorial on how to add those files into your MeVisLab application, to work with them, below.</description></item><item><title>Visualization Examples</title><link>https://mevislab.github.io/examples/pull/94/examples/visualization/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/visualization/</guid><description>Visualization Examples: The following examples are available:
[1] Creating a magnifier [2] Display images converted to Open Inventor scene objects [3] Image overlays [4] Synchronous view of two images [5] Volume rendering and interactions [6] Volume Rendering vs. Path Tracing</description></item><item><title>Writing a simple test case in MeVisLab</title><link>https://mevislab.github.io/examples/pull/94/examples/testing/example1/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/testing/example1/</guid><description>Testing Example 1: Writing a simple test case in MeVisLab This example shows how to write and execute test cases in MeVisLab. The Python files can be downloaded below.
Download You can download the Python files here</description></item><item><title>2D and 3D visualization of contours</title><link>https://mevislab.github.io/examples/pull/94/examples/data_objects/contours/example3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/data_objects/contours/example3/</guid><description>Contour Example 3: 2D and 3D visualization of contours This example shows how to display CSOs in 2D as an overlay and additionally how the CSOs are displayed in 3D.
Summary Images are loaded by using a LocalImage module and displayed in a 2D viewer. A SoCSOLiveWireEditor is added to draw contours on the images. The CSOSliceInterpolator generates additional contours between the manual CSOs by using linear interpolation.
The module VoxelizeCSO is used to create a three-dimensional voxel mask of the contours which can be used as an overlay on the images in a View2D panel.</description></item><item><title>Annotation of images</title><link>https://mevislab.github.io/examples/pull/94/examples/data_objects/contours/example4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/data_objects/contours/example4/</guid><description>Contour Example 4: Annotation of images This example shows how to add annotations to an image.
Summary In this example, the network of Contour Example 3 is extended so that the volume of the 3D mask generated by the VoxelizeCSO module is calculated. The CalculateVolume module counts the number of voxels in the given mask and returns the correct volume in ml. The calculated volume will be used for a custom SoView2DAnnotation displayed in the View2D.</description></item><item><title>Apply transformations on a 3D WEM object via mouse interactions</title><link>https://mevislab.github.io/examples/pull/94/examples/data_objects/surface_objects/example3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/data_objects/surface_objects/example3/</guid><description>Surface Example 3: Interactions with WEM Scale, rotate and move a WEM in a scene In this example, we are using a SoTransformerDragger module to apply transformations on a 3D WEM object via mouse interactions. Download You can download the example network here
Interactively modify WEMs In this example, we are using a SoWEMBulgeEditor module to modify a WEM using the mouse. Download You can download the example network here</description></item><item><title>Arithmetic operations on two images</title><link>https://mevislab.github.io/examples/pull/94/examples/image_processing/example1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/image_processing/example1/</guid><description>Image Processing Example 1: Arithmetic operations on two images In this example, we apply scalar functions on two images like Add, Multiply, Subtract, etc.
Summary We are loading two images by using the LocalImage module and show them in a SynchroView2D. In addition to that, both images are used for arithmetic processing in the module Arithmetic2.
Download You can download the example network here</description></item><item><title>Camera interaction with collision detection</title><link>https://mevislab.github.io/examples/pull/94/examples/open_inventor/example4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/open_inventor/example4/</guid><description>Open Inventor Example 4: Camera interaction with collision detection This example shows how to implement a camera flight using keyboard shortcuts. Collisions with anatomical structures are detected and the flight stops. In addition to that, the camera object and direction is rendered in another viewer.
This example has been taken from the MeVisLab forum.
Summary A local macro flightControl allows you to navigate with the camera through the scene.
Download You can download the example network here</description></item><item><title>Camera Interactions in Open Inventor</title><link>https://mevislab.github.io/examples/pull/94/examples/open_inventor/example3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/open_inventor/example3/</guid><description>Open Inventor Example 3: Camera Interactions in Open Inventor This example shows different options for using a camera and different viewers in Open Inventor.
Summary We will show the difference between a SoRenderArea and a SoExaminerViewer and use different modules of the SoCamera* group.
Download You can download the example network here</description></item><item><title>Clip Planes</title><link>https://mevislab.github.io/examples/pull/94/examples/image_processing/example5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/image_processing/example5/</guid><description>Image Processing Example 5: Clip Planes In this example, we are using the currently visible slice from a 2D view as a clip plane in 3D.
Summary We are loading images by using the LocalImage module and render them as a 2-dimensional image stack SoRenderArea. The displayed slice is used to create a 3D plane/clip plane in a SoExaminerViewer.
Download You can download the example network here</description></item><item><title>Contour Filter</title><link>https://mevislab.github.io/examples/pull/94/examples/basic_mechanisms/contour_filter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/basic_mechanisms/contour_filter/</guid><description>Example 1: Contour Filter This example shows how to create a contour filter.
Summary Images are loaded via ImageLoad module and visualized unchanged in a View2D module View2D1. Additionally the images are modified by a local macro module Filter and shown in another View2D viewer View2D.
In order to display the same slice (unchanged and changed), the module SyncFloat is used to synchronize the field value startSlice in both viewers. The SyncFloat module duplicates the value Float1 to the field Float2.</description></item><item><title>Contour interpolation</title><link>https://mevislab.github.io/examples/pull/94/examples/data_objects/contours/example2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/data_objects/contours/example2/</guid><description>Contour Example 2: Contour interpolation This example shows how to interpolate CSOs across slices.
Summary In this example, semi-automatic countours are created using the SoCSOLiveWireEditor module and their depiction is modified using the SoCSOVisualizationSettings module.
Additional contours between the manually created ones are generated by the CSOSliceInterpolator and added to the CSOManager. Different groups of contours are created for the left and right lobe of the lung and colored respectively.</description></item><item><title>Contours and ghosting</title><link>https://mevislab.github.io/examples/pull/94/examples/data_objects/contours/example5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/data_objects/contours/example5/</guid><description>Contour Example 5: Contours and ghosting This image shows how to automatically create CSOs based on ISO values. In addition the visualization of CSOs of previous and subsequent slices is shown.
Summary In this example, the CSOIsoGenerator is used to generate contours based on a given ISO value of the image. Contours are generated in the image where the given ISO value is close to the one configured. These contours are stored in the CSOManager and ghosting is activated in the SoCSOVisualizationSettings.</description></item><item><title>Creating a magnifier</title><link>https://mevislab.github.io/examples/pull/94/examples/visualization/example2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/visualization/example2/</guid><description>Visualization Example 2: Creating a magnifier This example shows how to create a magnifier. Using the module SubImage a fraction of the original image can be extracted and enlarged. Download You can download the example network here</description></item><item><title>Creating a simple application</title><link>https://mevislab.github.io/examples/pull/94/examples/basic_mechanisms/viewer_application/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/basic_mechanisms/viewer_application/</guid><description>Example 3: Creating a simple application In this example, you will learn how to create a simple prototype application in MeVisLab including a user interface (UI) with 2D and 3D viewers.
Download You can download the example network here</description></item><item><title>Creation of Contours</title><link>https://mevislab.github.io/examples/pull/94/examples/data_objects/contours/example1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/data_objects/contours/example1/</guid><description>Contour Example 1: Creation of contours Contours are stored as Contour Segmented Objects (CSOs) in MeVisLab. This example highlights ways of creating CSOs using modules of the SoCSOEditor group.
Info:&amp;nbsp; You may want to look at the glossary entry on CSOs. The SoCSOEditor module group contains several modules, some of which are listed right below:
SoCSOPointEditor SoCSOAngleEditor SoCSOArrowEditor SoCSODistanceLineEditor SoCSODistancePolylineEditor SoCSOEllipseEditor SoCSORectangleEditor SoCSOSplineEditor SoCSOPolygonEditor SoCSOIsoEditor SoCSOLiveWireEditor Info:&amp;nbsp; Whenever Contour Segmented Objects are created, they are temporarily stored by and can be managed with the CSOManager.</description></item><item><title>Creation of WEMs</title><link>https://mevislab.github.io/examples/pull/94/examples/data_objects/surface_objects/example1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/data_objects/surface_objects/example1/</guid><description>Surface Example 1: Creation of WEMs This example shows how to create WEMs out of voxel images and CSOs. Download You can download the example network here</description></item><item><title>Display images converted to Open Inventor scene objects</title><link>https://mevislab.github.io/examples/pull/94/examples/visualization/example4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/visualization/example4/</guid><description>Visualization Example 4: Display images converted to Open Inventor scene objects This example shows how to convert images to Open Inventor scene objects using the module SoView2D and modules based on SoView2D. Download You can download the example network here</description></item><item><title>Distance between markers</title><link>https://mevislab.github.io/examples/pull/94/examples/data_objects/markers/example1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/data_objects/markers/example1/</guid><description>Marker Example 1: Distance between markers This examples shows how to create markers in a viewer and measure their distance. Download You can download the example network here</description></item><item><title>Drawing curves</title><link>https://mevislab.github.io/examples/pull/94/examples/data_objects/curves/example1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/data_objects/curves/example1/</guid><description>Curves Example: Drawing curves This examples shows how to create and render curves. Download You can download the example network here</description></item><item><title>Image overlays</title><link>https://mevislab.github.io/examples/pull/94/examples/visualization/example3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/visualization/example3/</guid><description>Visualization Example 3: Image overlays This example shows the creation of an overlay. Using the module SoView2DOverlay, an overlay can be blended over a 2D image. Download You can download the example network here</description></item><item><title>Interactively moving WEM</title><link>https://mevislab.github.io/examples/pull/94/examples/data_objects/surface_objects/example4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/data_objects/surface_objects/example4/</guid><description>Surface Example 4: Interactively moving WEM This example shows how to use dragger modules, to modify objects in a 3D viewer. Download You can download the example network here</description></item><item><title>Masking images</title><link>https://mevislab.github.io/examples/pull/94/examples/image_processing/example2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/image_processing/example2/</guid><description>Image Processing Example 2: Masking images In this example, we create a simple mask on an image, so that background pixels are not affected by changes of the window/level values.
Summary We are loading images by using the LocalImage module and show them in a SynchroView2D. The same image is shown in the right viewer of the SynchroView2D but with a Threshold based Mask.
Download You can download the example network here</description></item><item><title>Mouse interactions in an Open Inventor scene</title><link>https://mevislab.github.io/examples/pull/94/examples/open_inventor/example2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/open_inventor/example2/</guid><description>Open Inventor Example 2: Mouse interactions in an Open Inventor scene This example shows how to implement object interactions.
Summary A SoExaminerViewer is used to render a SoCube object. The SoMouseGrabber is used to identify mouse interactions in the viewer and to resize the cube.
Download You can download the example network here</description></item><item><title>Open Inventor objects</title><link>https://mevislab.github.io/examples/pull/94/examples/open_inventor/example1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/open_inventor/example1/</guid><description>Open Inventor Example 1: Open Inventor objects In this example a simple Open Inventor scene is created. The Open Inventor scene shows three objects of different color and shape.
Summary A SoExaminerViewer is used to render open inventor scenes in 3D. The SoBackground module defines the background of the whole scene.
Three 3D objects are created (SoCone, SoSphere and SoCube) having a defined SoMaterial module for setting the DiffuseColor of the object.</description></item><item><title>Panel for the contour filter</title><link>https://mevislab.github.io/examples/pull/94/examples/basic_mechanisms/macro_modules_and_module_interaction/example1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/basic_mechanisms/macro_modules_and_module_interaction/example1/</guid><description>Example 1: Panel for the contour filter This example contains a whole package structure. Inside you can find the example contour filter for which a panel was created.
Summary A new macro module Filter has been created. Initially macro modules do not provide an own panel containing user interface elements such as buttons. The Automatic Panel is shown on double-clicking the module providing the name of the module.
In this example we update the *.</description></item><item><title>Processing and modification of WEMs</title><link>https://mevislab.github.io/examples/pull/94/examples/data_objects/surface_objects/example2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/data_objects/surface_objects/example2/</guid><description>Surface Example 2: Processing and modification of WEMs This example shows how to process and modify WEMs using the modules WEMModify, WEMSmooth and WEMSurfaceDistance. Download You can download the example network here</description></item><item><title>Python scripting</title><link>https://mevislab.github.io/examples/pull/94/examples/basic_mechanisms/macro_modules_and_module_interaction/example2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/basic_mechanisms/macro_modules_and_module_interaction/example2/</guid><description>Example 2: Python scripting This example shows how to create module interactions via Python scripting.
Summary A new macro module IsoCSOs is created providing two viewers in its internal network, View2D and SoExaminerViewer. Both viewers are included in the panel of the module.
To showcase how Python functions can be implemented in MeVisLab and called from within a module, additional buttons to browse directories and create contours via the CSOIsoGenerator are added.</description></item><item><title>Region Growing (Segmentation)</title><link>https://mevislab.github.io/examples/pull/94/examples/image_processing/example3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/image_processing/example3/</guid><description>Image Processing Example 3: Region Growing (Segmentation) In this example, we create a simple mask on an image by using the RegionGrowing module.
Summary We are loading images by using the LocalImage module and show them in a SynchroView2D. The same image is used as input for the RegionGrowing module. The starting point for the algorithm is a list of markers created by the SoView2DMarkerEditor. As the RegionGrowing may leave gaps, an additional CloseGap module is added.</description></item><item><title>Subtract 3D objects</title><link>https://mevislab.github.io/examples/pull/94/examples/image_processing/example4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/image_processing/example4/</guid><description>Image Processing Example 4: Subtract 3D objects In this example, we subtract a sphere from another WEM.
Summary We are loading images by using the LocalImage module and render them as a 3D scene in a SoExaminerViewer. We also add a sphere which is then subtracted from the original image.
Download You can download the example network here</description></item><item><title>Synchronous view of two images</title><link>https://mevislab.github.io/examples/pull/94/examples/visualization/example1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/visualization/example1/</guid><description>Visualization Example 1: Synchronous view of two images This very simple example shows how to load an image and apply a basic Convolution filter to the image. The image with and without filter is shown in a Viewer and scrolling is synchronized so that the same slice is shown for both images.
Download You can download the example network here</description></item><item><title>Volume rendering and interactions</title><link>https://mevislab.github.io/examples/pull/94/examples/visualization/example5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/visualization/example5/</guid><description>Visualization Example 5: Volume rendering and interactions This example shows the volume rendering of a scan. The texture of the volume is edited and animations are implemented. Download You can download the example network here</description></item><item><title>Volume Rendering vs. Path Tracing</title><link>https://mevislab.github.io/examples/pull/94/examples/visualization/example6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/visualization/example6/</guid><description>Visualization Example 6.1: Volume Rendering vs. Path Tracing This example shows a comparison between Volume Rendering and Path Tracing. The same scene is rendered and the camera interactions in both viewers are synchronized. Download You can download the example network here</description></item><item><title>WEM - Primitive Value Lists</title><link>https://mevislab.github.io/examples/pull/94/examples/data_objects/surface_objects/example5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/94/examples/data_objects/surface_objects/example5/</guid><description>Surface Example 5: WEM - Primitive Value Lists This example shows how to use Primitive Value Lists (PVLs). With the help of PVLs the distance between the surfaces of WEMs is color coded. Download You can download the example network here</description></item></channel></rss>