// MDL v1 utf8
mevislabVersion = 3.6.0.14
network  {
  watchlist = ""
}
module LocalImage {
  internal  {
    frame = "423 316 144 72"
    moduleGroupName = ""
    showNetworkPanel = true
  }
  fields  {
    instanceName = LocalImage
    name = $(DemoDataPath)/BrainMultiModal/ProbandT1.dcm
    autoLoad = TRUE
  }
}
module LocalImage {
  internal  {
    frame = "586 316 144 72"
    moduleGroupName = ""
    showNetworkPanel = true
    windows  {
      window _default {
        geometry = "718 498 485 144"
        sizeHint = "485 144"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = LocalImage1
    name = $(DemoDataPath)/BrainMultiModal/ProbandT2.dcm
    autoLoad = TRUE
  }
}
module SynchroView2D {
  internal  {
    frame = "517 70 120 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "679 329 804 400"
        sizeHint = "804 400"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SynchroView2D
    leftInventorInputOn = FALSE
    rightInventorInputOn = FALSE
    synchSlicing = TRUE
    synchZooming = TRUE
    synchTiming = TRUE
    synchLUTs = TRUE
    disconnectOnHide = TRUE
    snapToCenter1 = FALSE
    snapToCenter2 = FALSE
    slice1 = 44
    timepoint1 = 0
    filterMode = FILTER_LINEAR
    slice2 = 44
    timepoint2 = 0
    lut1w = 763.902587890625
    lut1c = 699.165161132813
    lut2w = 763.902587890625
    lut2c = 699.165161132813
    annotationColor = "0.899999976158142 0.899999976158142 0.899999976158142"
    borderOn = FALSE
    drawCurrentPos = FALSE
    showCurrentPos = FALSE
    worldPosition = "-8.59580993652344 14.0424690246582 85.9715423583984"
    background = "0 0 0"
  }
}
module Arithmetic2 {
  internal  {
    frame = "529 185 96 72"
    moduleGroupName = ""
    showNetworkPanel = true
  }
  fields  {
    instanceName = Arithmetic2
    function = Add
    outputImageSize = InvalidateOutputIfSizesDiffer
    constant = 0
    autoReplicate = FALSE
  }
}
connections  {
  SynchroView2D.inImage1 = LocalImage.outImage
  SynchroView2D.inImage2 = Arithmetic2.output0
  Arithmetic2.input0 = LocalImage.outImage
  Arithmetic2.input1 = LocalImage1.outImage
}
networkModel = ""
