<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Matplotlib on MeVisLab Examples</title><link>https://mevislab.github.io/examples/pull/116/tags/matplotlib/</link><description>Recent content in Matplotlib on MeVisLab Examples</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 31 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://mevislab.github.io/examples/pull/116/tags/matplotlib/index.xml" rel="self" type="application/rss+xml"/><item><title>Matplotlib</title><link>https://mevislab.github.io/examples/pull/116/tutorials/thirdparty/matplotlib/</link><pubDate>Thu, 25 May 2023 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/116/tutorials/thirdparty/matplotlib/</guid><description>&lt;h1 id="matplotlib">Matplotlib&lt;/h1>
&lt;p>Matplotlib, introduced by John Hunter in 2002 and initially released in 2003, is a comprehensive data visualization library in Python. It is widely used among the scientific world as it is easy to grasp for beginners and provides high quality plots and images, that are widely customizable.&lt;/p>

&lt;svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
 &lt;symbol id="check-fill" fill="currentColor" viewBox="0 0 16 16">
 &lt;path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>
 &lt;/symbol>
 &lt;symbol id="info-fill" fill="currentColor" viewBox="0 0 16 16">
 &lt;path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z"/>
 &lt;/symbol>
 &lt;symbol id="warning-fill" fill="currentColor" viewBox="0 0 16 16">
 &lt;path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
 &lt;/symbol>
 &lt;symbol id="danger-fill" fill="currentColor" viewBox="0 0 16 16">
 &lt;path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
 &lt;/symbol>
&lt;/svg>

&lt;div class="alert alert-primary alert-info d-flex align-items-center" role="alert">
 &lt;svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Info:">&lt;use xlink:href="#info-fill"/>&lt;/svg>
 &lt;div>
 &lt;b>Info:&amp;nbsp;&lt;/b>
 The documentation on Matplotlib along with general examples, cheat sheets and a starting guide can be found &lt;a href="https://matplotlib.org/" target="_blank" rel="noopener">here&lt;/a>.
 &lt;/div>
&lt;/div>
&lt;p>As MeVisLab supports the integration of Python scripts e. g. for test automation, Matplotlib can be used to visualize any data you might want to see. And as it is directly integrated into MeVisLab, you don&amp;rsquo;t have to install it (via &lt;code>PythonPip&lt;/code> module) first.&lt;/p></description></item><item><title>Example 1: Module Setup</title><link>https://mevislab.github.io/examples/pull/116/tutorials/thirdparty/matplotlib/modulesetup/</link><pubDate>Fri, 26 May 2023 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/116/tutorials/thirdparty/matplotlib/modulesetup/</guid><description>&lt;h1 id="example-1-module-setup">Example 1: Module Setup&lt;/h1>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>To be able to access the data needed for our grayscale distribution plots, we need a network consisting of a module that imports DICOM data, a module that differentiates between slices and another that ouputs histogram data.&lt;/p>
&lt;h2 id="steps-to-do">Steps to do&lt;/h2>
&lt;p>Open up your MeVisLab workspace and add the modules &lt;code>LocalImage&lt;/code>, &lt;code>SubImage&lt;/code> and &lt;code>Histogram&lt;/code> to it.
Connect the output of &lt;code>LocalImage&lt;/code> to the input of &lt;code>SubImage&lt;/code> and the output of &lt;code>SubImage&lt;/code> with the input of &lt;code>Histogram&lt;/code>.
If you feel like using a shortcut, you can also download the base network below and open it in your MeVisLab.&lt;/p></description></item><item><title>Example 2: 2D Plotting</title><link>https://mevislab.github.io/examples/pull/116/tutorials/thirdparty/matplotlib/2dplotting/</link><pubDate>Tue, 30 May 2023 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/116/tutorials/thirdparty/matplotlib/2dplotting/</guid><description>&lt;h1 id="example-2-2d-plotting">Example 2: 2D Plotting&lt;/h1>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>In this tutorial, we will equip the macro module we created in the &lt;a href="https://mevislab.github.io/examples/pull/116/tutorials/thirdparty/matplotlib/modulesetup">previous tutorial&lt;/a> with a responsive and interactable panel to plot grayscale distributions of single slices as well as defined sequences of slices in 2D.&lt;/p>
&lt;h2 id="steps-to-do">Steps to do&lt;/h2>
&lt;p>Open the module definition folder of your macro module and the related .script file in MATE. Then activate the Preview as shown below:&lt;/p>
&lt;p>&lt;p class="page-image">
 &lt;a data-modal="bs-lightbox" href="https://mevislab.github.io/examples/pull/116/images/tutorials/thirdparty/Matplotlib7.png" title="">&lt;img id="" class="img-fluid rounded" src="https://mevislab.github.io/examples/pull/116/images/tutorials/thirdparty/Matplotlib7.png" alt="MATE Preview" />&lt;/a>
 &lt;figcaption class="figure-caption">&lt;/figcaption>
&lt;/p></description></item><item><title>Example 3: Slice Comparison</title><link>https://mevislab.github.io/examples/pull/116/tutorials/thirdparty/matplotlib/slicecomparison/</link><pubDate>Wed, 31 May 2023 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/116/tutorials/thirdparty/matplotlib/slicecomparison/</guid><description>&lt;h1 id="example-3-slice-comparison">Example 3: Slice Comparison&lt;/h1>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>We will adapt the previously created macro module to be able to overlay two defined slices to compare their grayscale distributions.&lt;/p>
&lt;ul>
&lt;li>The module we are adapting has been set up in the &lt;a href="https://mevislab.github.io/examples/pull/116/tutorials/thirdparty/matplotlib/modulesetup">Example 1: Module Setup&lt;/a> tutorial.&lt;/li>
&lt;li>The panel and two-dimensional plotting functionality has been added in [Example 2: 2D Plotting]
(/tutorials/thirdparty/matplotlib/2dplotting).&lt;/li>
&lt;/ul>
&lt;h2 id="steps-to-do">Steps to do&lt;/h2>
&lt;p>At first, we will extend the panel: Open your &lt;code>BaseNetwork&lt;/code> macro module within an empty MeVisLab workspace and select the .script file from its related files.&lt;/p></description></item><item><title>Example 4: 3D Plotting</title><link>https://mevislab.github.io/examples/pull/116/tutorials/thirdparty/matplotlib/3dplotting/</link><pubDate>Wed, 31 May 2023 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/116/tutorials/thirdparty/matplotlib/3dplotting/</guid><description>&lt;h1 id="example-4-3d-plotting">Example 4: 3D Plotting&lt;/h1>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>In this tutorial, we will equip the macro module we created in the &lt;a href="https://mevislab.github.io/examples/pull/116/tutorials/thirdparty/matplotlib/modulesetup">Example 1: Module Setup&lt;/a> and later on adapted by enabling it to plot grayscale distributions of single slices and sequences in 2D in &lt;a href="https://mevislab.github.io/examples/pull/116/tutorials/thirdparty/matplotlib/2dplotting">Example 2: 2D Plotting&lt;/a> with a three dimensional plotting functionality.&lt;/p>
&lt;h2 id="steps-to-do">Steps to do&lt;/h2>
&lt;p>The fields and commands needed have already been prepared in the second tutorial. We will just have to modify our .py file a little to make them usable. Integrate the following code into your .py file and import numpy.&lt;/p></description></item></channel></rss>