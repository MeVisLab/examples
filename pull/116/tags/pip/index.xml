<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pip on MeVisLab Examples</title><link>https://mevislab.github.io/examples/pull/116/tags/pip/</link><description>Recent content in Pip on MeVisLab Examples</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 16 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://mevislab.github.io/examples/pull/116/tags/pip/index.xml" rel="self" type="application/rss+xml"/><item><title>Example 4: Installing additional Python packages using the PythonPip module</title><link>https://mevislab.github.io/examples/pull/116/tutorials/basicmechanisms/macromodules/pythonpip/</link><pubDate>Tue, 16 May 2023 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/pull/116/tutorials/basicmechanisms/macromodules/pythonpip/</guid><description>&lt;h1 id="example-4-installing-additional-python-packages-using-the-pythonpip-module">Example 4: Installing additional Python packages using the PythonPip module&lt;/h1>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>MeVisLab already comes with a lot of integrated third party software tools ready to use. Nevertheless it might be necessary to install additional Python packages for your specific needs. This example will walk you through the process of adding packages through usage of/using the &lt;code>PythonPip&lt;/code> module.&lt;/p>
&lt;p>The &lt;code>PythonPip&lt;/code> module allows to work with the Python package manager pip. It can be used to install Python packages into the site-packages of the MeVisLab Python installation.&lt;/p></description></item></channel></rss>