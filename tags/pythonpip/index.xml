<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PythonPip on MeVisLab Examples</title><link>https://mevislab.github.io/examples/tags/pythonpip/</link><description>Recent content in PythonPip on MeVisLab Examples</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 16 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://mevislab.github.io/examples/tags/pythonpip/index.xml" rel="self" type="application/rss+xml"/><item><title>Example 4: Installing additional Python packages using the PythonPip module</title><link>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/pythonpip/</link><pubDate>Tue, 16 May 2023 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/pythonpip/</guid><description>Example 4: Installing additional Python packages using the PythonPip module Introduction MeVisLab already comes with a lot of integrated third party software tools ready to use. Nevertheless it might be necessary to install additional Python packages for your specific needs. This example will walk you through the process of adding packages through usage of/using the PythonPip module.
The PythonPip module allows to work with the Python package manager pip. It can be used to install Python packages into the site-packages of the MeVisLab Python installation.</description></item><item><title>Example 2: Use trained PyTorch network in MeVisLab</title><link>https://mevislab.github.io/examples/tutorials/thirdparty/pytorch/pytorchexample2/</link><pubDate>Tue, 16 May 2023 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/tutorials/thirdparty/pytorch/pytorchexample2/</guid><description>Example 2: Use trained PyTorch network in MeVisLab Introduction In the previous tutorial, you learned how to install PyTorch for usage in MeVisLab. In this example we are using a trained network from torch.hub for creating a brain parcellation map on MeVisLab demo images.
Make sure that you successfully executed Example 1: Install PyTorch by using the PythonPip module before starting.
Add the module PythonPip to your workspace and make sure that torch and torchvision are installed in your MeVisLab package.</description></item><item><title>Example 1: Installing PyTorch using the PythonPip module</title><link>https://mevislab.github.io/examples/tutorials/thirdparty/pytorch/pytorchexample1/</link><pubDate>Tue, 16 May 2023 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/tutorials/thirdparty/pytorch/pytorchexample1/</guid><description>Example 1: Installing PyTorch using the PythonPip module Introduction The module PythonPip allows you to install additional Python packages to be used in MeVisLab.
Warning:&amp;nbsp; You should not use the general Python pip command from a locally installed Python, because MeVisLab will not know these packages and they cannot be used in MeVisLab directly. The module either allows to install packages into the global MeVisLab installation directory, or into your defined user package.</description></item><item><title>Example 3: Segment persons in webcam videos</title><link>https://mevislab.github.io/examples/tutorials/thirdparty/pytorch/pytorchexample3/</link><pubDate>Tue, 16 May 2023 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/tutorials/thirdparty/pytorch/pytorchexample3/</guid><description>Example 3: Segment persons in webcam videos Introduction This tutorial is based on Example 2: Face Detection with OpenCV. You can re-use some of the scripts already developed in the other tutorial.
Steps to do Add the macro module developed in the previous example to your workspace.
WebCamTest module Open the internal network of the module via middle mouse button and right click on the tab of the workspace showing the internal network.</description></item></channel></rss>