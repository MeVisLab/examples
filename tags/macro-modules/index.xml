<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Macro Modules on MeVisLab Examples</title><link>https://mevislab.github.io/examples/tags/macro-modules/</link><description>Recent content in Macro Modules on MeVisLab Examples</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 15 Jun 2022 08:58:44 +0200</lastBuildDate><atom:link href="https://mevislab.github.io/examples/tags/macro-modules/index.xml" rel="self" type="application/rss+xml"/><item><title>Example 2: Macro Modules and Module Interaction</title><link>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/</link><pubDate>Wed, 15 Jun 2022 08:58:44 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/</guid><description>Example 2: Macro Modules Macro Modules and Module Interactions via User Interface and Python Scripting MeVisLab provides different types of modules, which can be distinguished by their color. The brown modules are called macro modules. Macro modules condense a whole network into one module. You can open the internal network by pressing the middle mouse button or via right mouse click and select [ Help &amp;rarr; Show Internal Network ]. Macro modules provide the possibility to create customized user interfaces and and python interactions.</description></item><item><title>Example 2.2: Creation of Global Macro Modules</title><link>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/globalmacromodules/</link><pubDate>Wed, 15 Jun 2022 08:58:44 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/globalmacromodules/</guid><description>Global Macro Modules &amp;nbsp;&amp;nbsp;&amp;nbsp;This example is also available on Youtube. Introduction In this chapter you will learn how to create global macro modules. There are many ways to do this. You can convert local macros into global macro modules or you can directly create global macro modules using the Project Wizard. In contrast to local macro modules, global macro modules are commonly available throughout projects and can be found via module search and under [ Modules ].</description></item><item><title>Example 2.3: Creation of module help</title><link>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/helpfiles/</link><pubDate>Wed, 15 Jun 2022 08:58:44 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/helpfiles/</guid><description>Creation of module help Generating help of a Macro Module is part of the video about Macro Modules from Example 2: Creation of Global Macro Modules &amp;nbsp;&amp;nbsp;&amp;nbsp;This example is also available on Youtube. Introduction In this chapter, you will learn how to create a help page and an example network. For hands-on training, we will use the macro module Filter, which was created in the previous chapter.
Depending on the way the macro module was created the default help page and example network might or might not exist.</description></item><item><title>Example 2.4: GUI development</title><link>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/guidesign/</link><pubDate>Wed, 15 Jun 2022 08:58:44 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/guidesign/</guid><description>Building a Panel Layout: Interactions with Macro Modules &amp;nbsp;&amp;nbsp;&amp;nbsp;This example is also available on Youtube. Introduction This chapter will give you an introduction into the creation of module panels and user interfaces. For the implementation you will need to use the MeVisLab Definition Language (MDL) .
Extra Infos:&amp;nbsp; More information about GUI design in MeVisLab can be found here Creating a panel for the macro module flilter Creation of a module panel In this chapter we created the global macro module Filter.</description></item><item><title>Example 2.5: Interactions via Python scripting</title><link>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/pythonscripting/</link><pubDate>Wed, 15 Jun 2022 08:58:44 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/pythonscripting/</guid><description>Module Interactions Using Python Scripting Introduction This chapter will give you an overview over Python scripting in MeVisLab. Here, no introduction into Python will be given. However, basic knowledge in Python is helpful. Instead, we will show how to integrate and use Python in the MeVisLab SDK.
In fact, nearly everything in MeVisLab can be done via Python scripting: You can add modules to your network, or remove modules, you can dynamically establish and remove connections and so on.</description></item><item><title>Example 2.5.2: Module interactions via Python scripting</title><link>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/scriptingexample2/</link><pubDate>Wed, 15 Jun 2022 08:58:44 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/scriptingexample2/</guid><description>Scripting Example 2: Module interactions via Python scripting Introduction We like to create a GUI for this example network of Chapter V. In the example, CSOs were automatically created based on a predefined iso value. You can either implement the network, or else download the network here.
Steps to do Creating the macro module First, we condense the example network into a macro module and then we create a panel for that module.</description></item><item><title>Chapter I: Basic Mechanisms of MeVisLab</title><link>https://mevislab.github.io/examples/tutorials/basicmechanisms/</link><pubDate>Wed, 15 Jun 2022 08:54:53 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/basicmechanisms/</guid><description>MeVisLab Tutorial Chapter I &amp;nbsp;&amp;nbsp;&amp;nbsp;This example is also available on Youtube. Basic Mechanics of MeVisLab (Example: Building a Contour Filter) In this chapter you will learn the basic mechanics of the MeVisLab IDE. You will learn how to re-use existing Modules to load and view data, and you will build your first processing pipeline. Extra Infos:&amp;nbsp; Additional information about the basics of MeVisLab are explained here Loading Data First, we need to load the data we like to work on.</description></item></channel></rss>