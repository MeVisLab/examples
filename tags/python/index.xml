<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on MeVisLab Examples</title><link>https://mevislab.github.io/examples/tags/python/</link><description>Recent content in Python on MeVisLab Examples</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 15 Jun 2022 08:58:44 +0200</lastBuildDate><atom:link href="https://mevislab.github.io/examples/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Example 2.5: Interactions via Python scripting</title><link>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/pythonscripting/</link><pubDate>Wed, 15 Jun 2022 08:58:44 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/pythonscripting/</guid><description>Module Interactions Using Python Scripting Introduction This chapter will give you an overview over Python scripting in MeVisLab. Here, no introduction into Python will be given. However, basic knowledge in Python is helpful. Instead, we will show how to integrate and use Python in the MeVisLab SDK.
In fact, nearly everything in MeVisLab can be done via Python scripting: You can add modules to your network, or remove modules, you can dynamically establish and remove connections and so on.</description></item><item><title>Example 2.5.1: The module RunPythonScript</title><link>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/scriptingexample1/</link><pubDate>Wed, 15 Jun 2022 08:58:44 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/scriptingexample1/</guid><description>Scripting Example 1: The module RunPythonScript Introduction The module RunPythonScript allows to execute Python scripts from within a MeVisLab network. You can draw parameter connection from modules to RunPythonScript and back, to process parameter fields using Python scripting.
Steps to do Develop your network In this example, we like to dynamically change the color of a cube in an Open Inventor scene. For that, add and connect the following modules as shown.</description></item><item><title>Example 2.5.2: Module interactions via Python scripting</title><link>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/scriptingexample2/</link><pubDate>Wed, 15 Jun 2022 08:58:44 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/scriptingexample2/</guid><description>Scripting Example 2: Module interactions via Python scripting Introduction We like to create a GUI for this example network of Chapter V. In the example, CSOs were automatically created based on a predefined iso value. You can either implement the network, or else download the network here.
Steps to do Creating the macro module First, we condense the example network into a macro module and then we create a panel for that module.</description></item></channel></rss>