<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on MeVisLab Examples</title><link>https://mevislab.github.io/examples/tags/python/</link><description>Recent content in Python on MeVisLab Examples</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 15 Jun 2022 08:58:44 +0200</lastBuildDate><atom:link href="https://mevislab.github.io/examples/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Example 2.5: Interactions via Python scripting</title><link>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/pythonscripting/</link><pubDate>Wed, 15 Jun 2022 08:58:44 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/pythonscripting/</guid><description>Example 2.5: Module Interactions Using Python Scripting Introduction This chapter will give you an overview over Python scripting in MeVisLab. Here, no introduction into Python will be given. However, basic knowledge in Python is helpful. Instead, we will show how to integrate and use Python in the MeVisLab SDK.
In fact, nearly everything in MeVisLab can be done via Python scripting: You can add modules to your network, or remove modules, you can dynamically establish and remove connections and so on.</description></item><item><title>Example 2.5.1: The module RunPythonScript</title><link>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/scriptingexample1/</link><pubDate>Wed, 15 Jun 2022 08:58:44 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/scriptingexample1/</guid><description>Example 2.5.1: The module RunPythonScript &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;This example is also available on YouTube. Introduction The module RunPythonScript allows to execute Python scripts from within a MeVisLab network. You can draw parameter connection from modules to RunPythonScript and back, to process parameter fields using Python scripting.
Steps to do Develop your network In this example, we like to dynamically change the color of a cube in an Open Inventor scene. For that, add and connect the following modules as shown.</description></item><item><title>Example 2.5.2: Module interactions via Python scripting</title><link>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/scriptingexample2/</link><pubDate>Wed, 15 Jun 2022 08:58:44 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/scriptingexample2/</guid><description>Example 2.5.2: Module interactions via Python scripting &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;This example is also available on YouTube. Introduction In this example, you will learn how to add Python scripting to your User Interface. The network used in Chapter V will be used for creating the Macro Module.
Steps to do Creating the macro module First, we condense the example network into a macro module and then we create a panel for that module. To create a macro module use the Project Wizard, which you find under [ File &amp;rarr; Run Project Wizard ].</description></item><item><title>Example 3: Creating a simple application</title><link>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/viewerexample/</link><pubDate>Wed, 15 Jun 2022 08:58:44 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/basicmechanisms/macromodules/viewerexample/</guid><description>Example 3: Creating a simple application Introduction In the previous examples, you already learned how to create Macro Modules, user interfaces and how to interact with your UI via Python scripting.
In this example, you will learn how to create a simple Prototype application in MeVisLab including a User Interface with 2D and 3D viewer. You will learn how to implement field listeners and react on events.
Steps to do Create your network Start with an empty network and add the Module ImageLoad to your workspace.</description></item><item><title>Chapter VI: Testing</title><link>https://mevislab.github.io/examples/tutorials/testing/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/testing/</guid><description>MeVisLab Tutorial Chapter VI Testing, Profiling and Debugging in MeVisLab The MeVisLab Integrated Development Environment (IDE) provides tools for writing automated tests in Python, profiling your network performance and debugging your Python code.
In this chapter, all of these tools will be explained.
Testing The MeVisLab TestCenter is the starting point of your tests. Select [ File &amp;rarr; Run TestCaseManager ] to open the user interface of the TestCaseManager.
MeVisLab TestCaseManager Test Selection The Test Selection allows you to define a selection of testcases to be executed.</description></item><item><title>Example 1: Writing a simple testcase in MeVisLab</title><link>https://mevislab.github.io/examples/tutorials/testing/testingexample1/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/testing/testingexample1/</guid><description>Example 1: Writing a simple testcase in MeVisLab Introduction In this example, you will learn how to write an automated test for the module DicomImport. You can write testcases for any other module and network yourself.
Steps to do Creating the network to be used for testing</description></item><item><title>Example 3: Creating a simple application</title><link>https://mevislab.github.io/examples/examples/basic_mechanisms/viewer_application/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mevislab.github.io/examples/examples/basic_mechanisms/viewer_application/</guid><description>Example 3: Creating a simple application In this example, you will learn how to create a simple Prototype application in MeVisLab including a User Interface with 2D and 3D viewer. Download You can download the example network here</description></item></channel></rss>