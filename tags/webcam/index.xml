<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WebCam on MeVisLab Examples</title><link>https://mevislab.github.io/examples/tags/webcam/</link><description>Recent content in WebCam on MeVisLab Examples</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 15 Jun 2022 08:56:33 +0200</lastBuildDate><atom:link href="https://mevislab.github.io/examples/tags/webcam/index.xml" rel="self" type="application/rss+xml"/><item><title>Example 1: WebCam access with OpenCV</title><link>https://mevislab.github.io/examples/tutorials/thirdparty/opencv/thirdpartyexample1/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/thirdparty/opencv/thirdpartyexample1/</guid><description>Example 1: WebCam access with OpenCV Introduction In this example, we are using the PythonImage module and access your WebCam to show the video in a View2D.
Steps to do Creating the network to be used for testing Add the modules to your workspace and connect them as seen below.
Example Network The viewer is empty because the image needs to be set via Python scripting.
Info:&amp;nbsp; More information about the PythonImage module can be found here Create a Macro Module Now you need to create a Macro Module from your network.</description></item><item><title>Example 2: Face Detection with OpenCV</title><link>https://mevislab.github.io/examples/tutorials/thirdparty/opencv/thirdpartyexample2/</link><pubDate>Wed, 15 Jun 2022 08:56:33 +0200</pubDate><guid>https://mevislab.github.io/examples/tutorials/thirdparty/opencv/thirdpartyexample2/</guid><description>Example 2: Face Detection with OpenCV Introduction This example uses the OpenCV WebCam Python script and adds a basic face detection.
Info:&amp;nbsp; The Python code used in this example has been taken from Towards Data Science. Steps to do Open Example 1 Add the Macro Module developed in Example 1 to your workspace.
Download trained classifier XML file Initially you need to download the trained classifier XML file. It is available in the OpenCV GitHub repository.</description></item></channel></rss>